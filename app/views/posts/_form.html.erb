<%= form_with(model: post, local: true) do |form| %>

  <% if !@post.persisted? %>
    <%= form.hidden_field :post_type, value: @type %>
    <%= form.hidden_field :user_id, value: current_user.id %>
    <%= form.hidden_field :area_id, value: @area_id %>
    <%= form.hidden_field :problem_id, value: @problem_id %>
    <%= form.hidden_field :post_id, value: @post_id %>
  <% end %>
  <div class="form-group">
    <%= form.text_field :title, autofocus: true, class: 'form-control', placeholder: "Title" %>
  </div>
  <div class="form-group">
    <%# if @post.persisted? %>
<!--      <div class="row" style="margin-left: 2px">-->
<!--        <div id="note" draggable="true">-->
          <%#= image_tag('note.png', class: 'token_img') %>
<!--        </div>-->

<!--        <div id="debate" draggable="true">-->
          <%#= image_tag('debate.png', class: 'token_img') %>
<!--        </div>-->

<!--        <div id="question" draggable="true">-->
          <%#= image_tag('question.png', class: 'token_img') %>
<!--        </div>-->
<!--      </div>-->
    <%# end %>

    <%= form.text_area :content, autofocus: true, rows: 15, class: 'form-control', placeholder: "Body", id: 'froala-editor' %>
  </div>

  <div class="form-group">
    <%= form.file_field :images, multiple: true, accept: 'image/jpeg, image/png' %>
  </div>

  <% if @post.images.present? %>
    <div class="col-lg-12 col-md-12 ml-auto mr-auto">
      <% @post.images.each do |image| %>
        <div class="col-md-3">
          <%= image_tag(image, :class => "img-responsive", width: "250") %>
        </div>
      <% end %>
    </div>
  <% end %>

  <div class="form-group">
    <%= form.text_field :tag_list, class: 'form-control', placeholder: "Tags (separated by commas)" %>
  </div>

  <div class="form-group">

    <%= form.submit class: 'btn btn-primary' %>

    <% if post.persisted? %>
      <%= link_to "Cancel", post, class: "btn btn-link" %>
    <% else %>
      <%= link_to "Cancel", posts_path, class: "btn btn-link" %>
    <% end %>
  </div>
<% end %>

<script>
	var dragCallback = function (e) {
		e.dataTransfer.setData('Text', this.id);
	};

  <% if @post.persisted? %>
    FroalaEditor.DefineIcon('imageIcon', {SRC: "<%= image_path('note.png') %>", ALT: 'Image button', template: 'image'});
    FroalaEditor.RegisterCommand('alert', {
        title: 'Note',
        icon: 'imageIcon',
        focus: false,
        undo: false,
        refreshAfterCallback: false,
        callback: function () {
            dropToken(this, 'note');
        }
    });

    function dropToken(e, token_type) {
        var editor = e;
        e.selection.save();
        // Save into undo stack the current position.
        if (!editor.undo.canDo()) editor.undo.saveStep();

        // Insert HTML.
        // editor.html.insert('<a href="#"><img src="https://cdnjs.cloudflare.com/ajax/libs/emojione/2.0.1/assets/svg/1f600.svg" width="25"/></a>');
        $.ajax({
            url: '/post_tokens',
            type: "POST",
            dataType: "JSON",
            data: {
                user_id: <%= current_user.id %>,
                post_id: <%= @post.id || 2 %>,
                post_token_type: token_type,
            },
            success: function (data) {

                if(data.post_token_type == 'note'){
                    editor.html.insert('<a href="/post_tokens/' + data.post_token_type + '?id=' + data.id + '"><%= image_tag('note.png', width: "20") %>');
                }else if(data.post_token_type == 'debate'){
                    editor.html.insert('<a href="/post_tokens/' + data.post_token_type + '?id=' + data.id + '"><%= image_tag('debate.png', width: "20") %>');
                }else{
                    editor.html.insert('<a href="/post_tokens/' + data.post_token_type + '?id=' + data.id + '"><%= image_tag('question.png', width: "20") %>');
                }

                $.ajax({
                    url: '/post_tokens/token_modal',
                    type: "get",
                    data: {
                        id: data.id,
                    }
                })
            },
            error: function (data) {
            }
        })

        // Save into undo stack the changes.
        editor.undo.saveStep();

        // Firefox show cursor.
        if (editor.core.hasFocus() && editor.browser.mozilla) {
            editor.events.disableBlur();
            setTimeout(function () {
                editor.$el.blur().focus();
                editor.events.enableBlur();
            }, 0);
        }
        return true;
    }

    FroalaEditor.DefineIcon('questionIcon', {SRC: "<%= image_path('question.png') %>", ALT: 'Image button', template: 'image'});
    // FroalaEditor.DefineIcon('clear', {NAME: 'remove', SVG_KEY: 'remove'});
    FroalaEditor.RegisterCommand('clear', {
        title: 'Clear HTML',
        icon: 'questionIcon',
        focus: false,
        undo: true,
        refreshAfterCallback: true,
        callback: function () {
            dropToken(this, 'question');
        }
    });

    FroalaEditor.DefineIcon('debateIcon', {SRC: "<%= image_path('debate.png') %>", ALT: 'Image button', template: 'image'});
    // FroalaEditor.DefineIcon('insert', {NAME: 'plus', SVG_KEY: 'add'});
    FroalaEditor.RegisterCommand('insert', {
        title: 'Insert HTML',
        icon: 'debateIcon',
        focus: true,
        undo: true,
        refreshAfterCallback: true,
        callback: function () {
            dropToken(this, 'debate');
        }
    });

  new FroalaEditor('#froala-editor', {
      multiLine: false,
      lineBreakerTags: null,
      // Add the custom buttons in the toolbarButtons list, after the separator.
      toolbarButtons: [['bold', 'italic', 'underline', 'strikeThrough'], ['alert', 'clear', 'insert', 'alignLeft', 'alignCenter', 'formatOLSimple', 'insertLink']]
  })

  <% else %>
  new FroalaEditor('#froala-editor', {
      quickInsertEnabled: false,
      lineBreakerTags: null,
      toolbarButtons: {
          'moreText': {
              'buttons': ['bold', 'italic', 'underline', 'strikeThrough']
          },
          'moreParagraph': {
              'buttons': ['alignLeft', 'alignCenter', 'formatOLSimple']
          },
          'moreRich': {
              'buttons': ['insertLink']
          },
          'moreMisc': {
              'buttons': ['undo', 'redo', 'fullscreen', 'print'],
              'align': 'right',
              'buttonsVisible': 2
          }
      }
  });
  <% end %>
</script>

